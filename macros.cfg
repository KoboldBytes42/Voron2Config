#####################################################################
#   Macros
#####################################################################

#####################################################################
#   print_start macro
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Z_TILT_ADJUST if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one

[gcode_macro Nevermore_on]
gcode:
  SET_FAN_SPEED FAN=Nevermore SPEED=1

[gcode_macro Nevermore_off]
gcode:
  SET_FAN_SPEED FAN=Nevermore SPEED=0

[gcode_macro PRINT_START]
gcode:
    # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set target_chamber = params.CHAMBER|default("40")|int %}
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

    RESPOND MSG="Debug Chamber: {target_chamber}c" #Debug
    
    # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
    STATUS_HOMING         # Sets SB-leds to homing-mode
    RESPOND MSG="Homing..."
    G28                   # Full home (XYZ)
    G90                   # Absolut position

    ##  Uncomment for bed mesh (1 of 2)
    BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

    # Checks if the bed temp is higher than 70c - if so then trigger a heatsoak.
    {% if params.BED|int > 80 %}
        RESPOND MSG="Heating bed..."           # Displays info
        STATUS_HEATING                                      # Sets SB-leds to heating-mode
        M106 S255                                           # Turns on the PT-fan
 
        Nevermore_on                                       # Turns on the nevermore filter 
        SET_FAN_SPEED FAN=bed_fan SPEED=1                         #turns on the bed fans for heat
        G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
        
        RESPOND MSG="Target: {target_bed}c"    # Displays info     
        M190 S{target_bed}                                  # Sets the target temp for the bed
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={target_bed}
        
        {% if target_chamber < 30|int %}
            RESPOND MSG=" Soak for 5min..."                # Displays info
            G4 P300000                                 # Waits 5 min for the bedtemp to stabilize (ms) 
        {% else %}
            RESPOND MSG="Heating chamber. Target: {target_chamber}c"  # Displays info
            TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
        {% endif %}
        
        
    # If the bed temp is not over 80c, then it skips the heatsoak and just heats up to set temp with a 5min soak
    {% else %}
        RESPOND MSG="Heating bed. Target: {target_bed}c"           # Displays info
        STATUS_HEATING                                      # Sets SB-leds to heating-mode
        G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
        M190 S{target_bed}                                  # Sets the target temp for the bed
        RESPOND MSG="Soak for 5min"                # Displays info
        G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
    {% endif %}

    # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
    RESPOND MSG="Heating Hotend. Target: 150c"          # Displays info
    M109 S150                                    # Heats the nozzle to 150c and waits for it!

  
    ##  Uncomment for V2 (Quad gantry level AKA QGL)
    RESPOND MSG="Performing quad gantry leveling"      # Displays info
    STATUS_LEVELING                 # Sets SB-leds to leveling-mode
    quad_gantry_level               # Levels the buildplate via QGL
    G28 Z                           # Homes Z again after QGL


    ##  Uncomment for bed mesh (2 of 2)
    RESPOND MSG="measuring bed mesh"    # Displays info
    STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
    BED_MESH_CALIBRATE                 # Starts bed mesh

    # Heats up the nozzle up to target via data from slicer
    RESPOND MSG="Heating hotend to: {target_extruder}c"             # Displays info
    STATUS_HEATING                                                # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z30 F9000                              # Goes to center of the bed
    M107                                                          # Turns off partcooling fan
    M109 S{target_extruder}                                       # Heats the nozzle to printing temp and waits for it!

    # Gets ready to print by doing a purge line and updating the SB-leds
    RESPOND MSG="Start printing..."          # Displays info
    STATUS_PRINTING                                  # Sets SB-leds to printing-mode
    G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
    G0 Z0.4                                          # Raises Z to 0.4
    G91                                              # Incremental positioning 
    G1 X100 E20 F1000                                # Purge line
    G90                                              # Absolut position


[gcode_macro LOAD_FILAMENT]
gcode:
    M83                            ; set extruder to relative
    G1 E30 F300                    ; load
    G1 E15 F150                    ; prime nozzle with filament
    G1 E35 F150                   ; ...
    M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
    M83                            ; set extruder to relative
    G1 E10 F300                    ; extrude a little to soften tip
    G1 E-40 F1800                  ; retract some, but not too much or it will jam
    G1 E-42 F300                  ; to pass extruder gear
    M82                            ; set extruder to absolute



[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
      

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 30, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR

    ##  Uncomment if you have a Nevermore.
    Nevermore_off                   # Turns on the nevermore
    SET_FAN_SPEED FAN=bed_fan SPEED=0                         #turns off the bed fans
    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

    #turn of part fan
    M107 S00
    #pin: EBBCan: PA1

[gcode_macro PARK]
gcode:
    RESPOND MSG="Parking"
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z60

[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_BASE
gcode:
    {% set th = printer.toolhead %}
    {% set z_safe = [th.position.z + 20, th.axis_maximum.z]|min %}
    G90
    G0 Z{z_safe}
    CANCEL_PRINT_BASE